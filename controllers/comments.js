  if (process.env.NODE_ENV !== "production") {
    require('dotenv').config();
  }
  const secret = process.env.SECRET;
  const express = require('express');
  const mongoose = require('mongoose');

  const User = require('../models/user');
  const Comment = require('../models/comment');
  const Post = require('../models/post');
  const { findById } = require('../models/user');

  module.exports.showComments = async (req, res) => {
    try {  
      const { id } = req.params;
      const post = await Post.findById(id);
      const comments = post.comments;

      const tp=await Comment.find({});
      const arr=[];
      for(let i=0;i<tp.length;i++){
        if(id==tp[i].postid) {
          arr.push(tp[i]);
        }
      }
      res.status(200).json(arr);
    }
    catch (error) {
      res.status(500).json({ message: "Cannot show comments" });    
      console.log(error);
    }
  }

  module.exports.createComment = async (req, res) => {
    //console.log(req.user);
    const user = await User.findById(req.user._id)
    console.log("test continued");
    // console.log(user._id);

    const authorid=user._id
    const authorname=user.name;
    
    const {description} = req.body;  
  try {  
    const { id } = req.params;
    const postid=id;
    const post = await Post.findById(id);
    const result = await Comment.create({postid,description,authorid,authorname});
    console.log(result);
    post.comments.push(result);

    const updatedPost = await Post.findByIdAndUpdate(id, {...post}, { new: true });
    console.log(updatedPost);
    res.status(200).json(updatedPost);
    
  } catch (error) {
      res.status(500).json({ message: "Comment Not added" });    
      console.log(error);
    }
  };