if (process.env.NODE_ENV !== "production") {
    require('dotenv').config();
}
const secret = process.env.SECRET;
const jwt = require('jsonwebtoken');
const User = require('./models/user');


module.exports.isLoggedIn = async (req, res, next) => {
  try {
    const token = req.headers.authorization.split(" ")[0];
    const isCustomAuth = token.length < 500;
    // console.log(token)
    let decodedData;
    if (token && isCustomAuth) {     
      decodedData = jwt.verify(token, secret);
      // console.log(decodedData)
      const founduser= await User.findById(decodedData.id).select('-password');
      if(!founduser) {throw new Error('User not found')};
      req.user=founduser;
    } 
    else if(token){
      // console.log("this");
      decodedData = jwt.decode(token);
      // console.log(decodedData);
      const email = decodedData.email;
      const foundUser = await User.findOne({ email });
      if(!foundUser) {throw new Error('User not found')};
      req.user = foundUser; 
    }    
    // console.log("done")
    next();
  } catch (error) {
    res.status(401).json('Unauthorizes: No token provided');
    console.log(error);
  }
};

module.exports.isAuthor = async (req, res, next) => {
  try {
    // console.log(req.user)
    const id=req.params.id;
    const post = await Post.findById(id);
    console.log(post.author)
    if(post.author.equals(req.user._id)){
      // console.log("running")
      next();
    }
    
  }
  catch (error) {
    res.status(401).json('Unauthorized');
    console.log(error);
  }

};
