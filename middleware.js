if (process.env.NODE_ENV !== "production") {
    require('dotenv').config();
}
const secret = process.env.SECRET;
const jwt = require('jsonwebtoken');
const User = require('./models/user');


module.exports.isLoggedIn = async (req, res, next) => {
  try {
    const token = req.cookies.jwtoken.split(" ")[0];
    const isCustomAuth = token.length < 500;
    // console.log(token)
    let decodedData;
    if (token && isCustomAuth) {     
      decodedData = jwt.verify(token, secret);
      // console.log(decodedData)
      const founduser= await User.findById(decodedData.id).select('-password');
      if(!founduser) {throw new Error('User not found')};
      req.user=founduser;
    } 
    else if(token){
      // console.log("this");
      decodedData = jwt.decode(token);
      // console.log(decodedData);
      const email = decodedData.email;
      const name = decodedData.name;
      const username = email.substring(0, email.indexOf("@"));
      const oldUser = await User.findOne({ email });
      let id;
      if (!oldUser) {      
        
      const result = await User.create({ email, name,username});
      id=result._id;
      }  
      else{
        id=oldUser._id;
      }
      req.user = await User.findById(id);
      // req.userId = decodedData?.sub;
    }    
    next();
  } catch (error) {
    res.status(401).json('Unauthorizes: No token provided');
    console.log(error);

  }
};
